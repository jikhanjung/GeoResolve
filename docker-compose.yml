version: "3.9"

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: georesolve
      POSTGRES_USER: georesolve
      POSTGRES_PASSWORD: georesolve
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  api:
    build:
      context: .
      dockerfile: server/Dockerfile
    environment:
      DJANGO_ALLOWED_HOSTS: "*"
      DATABASE_URL: postgres://georesolve:georesolve@db:5432/georesolve
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      CORS_ALLOW_ALL: "1"
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./server:/app/server

  worker:
    build:
      context: .
      dockerfile: server/Dockerfile
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.prod
      DATABASE_URL: postgres://georesolve:georesolve@db:5432/georesolve
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    depends_on:
      - db
      - redis
    command: ["celery", "-A", "config.celery_app", "worker", "-l", "info"]
    volumes:
      - ./server:/app/server

  beat:
    build:
      context: .
      dockerfile: server/Dockerfile
    environment:
      DJANGO_SETTINGS_MODULE: config.settings.prod
      DATABASE_URL: postgres://georesolve:georesolve@db:5432/georesolve
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    depends_on:
      - db
      - redis
    command: ["celery", "-A", "config.celery_app", "beat", "-l", "info"]
    volumes:
      - ./server:/app/server

  web:
    build:
      context: .
      dockerfile: clients/web/Dockerfile
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/api/v1
    depends_on:
      - api
    ports:
      - "3000:3000"
    volumes:
      - ./clients/web:/app

volumes:
  pgdata:
